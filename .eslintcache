<<<<<<< Updated upstream
[{"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\index.js":"1","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Game.js":"2","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Board.js":"3","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\PengineClient.js":"4","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Square.js":"5"},{"size":177,"mtime":1649370600000,"results":"6","hashOfConfig":"7"},{"size":3736,"mtime":1650233086710,"results":"8","hashOfConfig":"7"},{"size":502,"mtime":1650212687308,"results":"9","hashOfConfig":"7"},{"size":2201,"mtime":1649370600000,"results":"10","hashOfConfig":"7"},{"size":256,"mtime":1649370600000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1achmmq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\index.js",[],["23","24"],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Game.js",["25","26"],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Board.js",[],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\PengineClient.js",[],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Square.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":16,"column":3,"nodeType":"33","messageId":"34","endLine":23,"endColumn":4},{"ruleId":"35","severity":1,"message":"36","line":76,"column":62,"nodeType":"37","messageId":"38","endLine":76,"endColumn":63},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\index.js":"1","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Game.js":"2","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Board.js":"3","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\PengineClient.js":"4","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Square.js":"5"},{"size":177,"mtime":1649370600000,"results":"6","hashOfConfig":"7"},{"size":3414,"mtime":1650140841047,"results":"8","hashOfConfig":"7"},{"size":502,"mtime":1650212687308,"results":"9","hashOfConfig":"7"},{"size":2201,"mtime":1649370600000,"results":"10","hashOfConfig":"7"},{"size":256,"mtime":1649370600000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1achmmq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\index.js",[],["25","26"],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Game.js",["27"],"import React from 'react';\nimport PengineClient from './PengineClient';\nimport Board from './Board';\n\n/**\n * List of colors.\n */\n\nconst colors = [\"r\", \"v\", \"p\", \"g\", \"b\", \"y\"];  // red, violet, pink, green, blue, yellow\n\n/**\n * Returns the CSS representation of the received color.\n */\n\nexport function colorToCss(color) {\n  switch (color) {\n    case \"r\": return \"red\";\n    case \"v\": return \"violet\";\n    case \"p\": return \"pink\";\n    case \"g\": return \"green\";\n    case \"b\": return \"blue\";\n    case \"y\": return \"yellow\";\n  }\n  return color;\n}\nclass Game extends React.Component {\n\n  pengine;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      turns: 0,\n      grid: null,\n      complete: false,  // true if game is complete, false otherwise\n      waiting: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handlePengineCreate = this.handlePengineCreate.bind(this);\n    this.pengine = new PengineClient(this.handlePengineCreate);\n  }\n\n  handlePengineCreate() {\n    const queryS = 'init(Grid)';    \n    this.pengine.query(queryS, (success, response) => {\n      if (success) {\n        this.setState({\n          grid: response['Grid']\n        });\n      }\n    });\n  }\n\n  handleClick(color) {\n    // No action on click if game is complete or we are waiting.\n    if (this.state.complete || this.state.waiting) {\n      return;\n    }\n    // Build Prolog query to apply the color flick.\n    // The query will be like:\n    // flick([[g,g,b,g,v,y,p,v,b,p,v,p,v,r],\n    //        [r,r,p,p,g,v,v,r,r,b,g,v,p,r],\n    //        [b,v,g,y,b,g,r,g,p,g,p,r,y,y],\n    //        [r,p,y,y,y,p,y,g,r,g,y,v,y,p],\n    //        [y,p,y,v,y,g,g,v,r,b,v,y,r,g],\n    //        [r,b,v,g,b,r,y,p,b,p,y,r,y,y],\n    //        [p,g,v,y,y,r,b,r,v,r,v,y,p,y],\n    //        [b,y,v,g,r,v,r,g,b,y,b,y,p,g],\n    //        [r,b,b,v,g,v,p,y,r,v,r,y,p,g],\n    //        [v,b,g,v,v,r,g,y,b,b,b,b,r,y],\n    //        [v,v,b,r,p,b,g,g,p,p,b,y,v,p],\n    //        [r,p,g,y,v,y,r,b,v,r,b,y,r,v],\n    //        [r,b,b,v,p,y,p,r,b,g,p,y,b,r],\n    //        [v,g,p,b,v,v,g,g,g,b,v,g,g,g]],r, Grid)\n    const gridS = JSON.stringify(this.state.grid).replaceAll('\"', \"\");\n    const queryS = \"flick(\" + gridS + \",\" + color + \", Grid)\";\n    this.setState({\n      waiting: true\n    });\n    this.pengine.query(queryS, (success, response) => {\n      if (success) {\n        this.setState({\n          grid: response['Grid'],\n          turns: this.state.turns + 1,\n          waiting: false\n        });\n      } else {\n        // Prolog query will fail when the clicked color coincides with that in the top left cell.\n        this.setState({\n          waiting: false\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.grid === null) {\n      return null;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"leftPanel\">\n          <div className=\"buttonsPanel\">\n            {colors.map(color =>\n              <button\n                className=\"colorBtn\"\n                style={{ backgroundColor: colorToCss(color) }}\n                onClick={() => this.handleClick(color)}\n                key={color}\n              />)}\n          </div>\n          <div className=\"turnsPanel\">\n            <div className=\"turnsLab\">Turns</div>\n            <div className=\"turnsNum\">{this.state.turns}</div>\n          </div>\n        </div>\n        <Board grid={this.state.grid} />\n      </div>\n    );\n  }\n}\n\nexport default Game;","C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Board.js",[],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\PengineClient.js",[],"C:\\Users\\valen\\OneDrive\\Escritorio\\ProyectoLogica\\src\\Square.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":16,"column":3,"nodeType":"36","messageId":"37","endLine":23,"endColumn":4},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["40"],["41"],"no-global-assign","no-unsafe-negation"]
>>>>>>> Stashed changes
